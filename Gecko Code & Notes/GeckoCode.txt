#############################################
Hook In-Match Stock Changes
---------------------------------------------
80033ce0 - Remove_Stock




#############################################
Hook Stage Selection on Match Start [SinsOfApathy]
---------------------------------------------
8016E730 - Start_Melee [WParam]
Inject @ 8016E740
r31 points to 8048053C
Offsets:
0x0E, Stage "Selected" ID

Free Registers: r14 - 24

IDs:
02 - Fountain of Dreams
03 - Pokemon Stadium
04 - Princess Peach's Castle
05 - Kongo Jungle
06 - Brinstar
07 - Corneria
08 - Yoshi's Story
09 - Onett
0A - Mute City
0B - Rainbow Cruise
0C - Jungle Japes
0D - Great Bay
0E - Temple
0F - Brinstar Depths
10 - Yoshi's Island
11 - Green Greens
12 - Fourside
13 - Mushroom Kingdom
14 - Mushroom Kingdom II
16 - Venom
17 - Poke Floats
18 - Big Blue
19 - Icicle Mountain
1B - Flat Zone
1C - Dreamland
1D - Yoshi's Island (64)
1E - Kongo Jungle
1F - Battlefield
20 - Final Destination

CODE:

lis r20, 0xCC00
lhz r28, 0x4010(r20)
ori r21, r28, 0xFF
sth r21, 0x4010(r20) # disable MP3 memory protection

b getStageID

sendByte:
lis r16, 0xCC00
li r15, 0xD0
li r14, 0x5
stw r15, 0x6814(r16) #start transfer, write to CH1 Param Register

writeByte:
lbz r18, 0xF(r3) #write byte at r3+14 to r18
slwi r18, r18, 24 #Left Shift by 24, since we don't append an ID
stw r18, 0x6824(r16) #store r18 into CH1 IMM register
stw r14, 0x6820(r16) #Set write IMM on CH1 Control Register

exicheckreceivewait:              
lwz    r17, 0x6820(r16)
andi.  r17, r17, 1 #Check if TSTART = 0 for transfer complete
bne    exicheckreceivewait # while((exi_chan1cr)&1);

stw    r17, 0x6814(r16) #Write 0 to Param for later reinit
blr

getStageID:
mr r31,r3
mflr r21
bl sendByte
mtlr r21

#############################################
Hook Character Selections on Match Start [SinsOfApathy]
---------------------------------------------
80068E98 - AllocAndInitPlayer [WParam]
inject @ 80068E9C

r30 points to single character block
Offsets:
0x04, Character "Selected" ID

Free Registers: r14 - 26

b getCharID

sendByte:
lis r16, 0xCC00
li r15, 0xD0
li r14, 0x5
stw r15, 0x6814(r16) #start transfer, write to CH1 Param Register

writeByte:
mr r11, r3 #write byte at r3 to r11
slwi r11, r11, 24 #Left Shift by 24, since we don't append an ID
stw r11, 0x6824(r16) #store r18 into CH1 IMM register
stw r14, 0x6820(r16) #Set write IMM on CH1 Control Register

exicheckreceivewait:              
lwz    r17, 0x6820(r16)
andi.  r17, r17, 1 #Check if TSTART = 0 for transfer complete
bne    exicheckreceivewait # while((exi_chan1cr)&1);

stw    r17, 0x6814(r16) #Write 0 to Param for later reinit
blr

getCharID:
mr r20, r3 #Move r3 to r21 for storage, since r21 is unused
li r3, 0
lbz r3,4(r31) #Load character ID byte into r3
bl sendByte
mr r3, r20  #Restore r3
li r4, 8 #Restore the replaced function

########################################################
GECKO CODE
--------------------------------------------------------

$Game Reporter[SinsOfApathy]
C216E740 0000000C
3E80CC00 A3944010
639500FF B2B44010
48000038 3E00CC00
39E000D0 39C00005
91F06814 8A43000F
5652C00E 92506824
91D06820 82306820
72310001 4082FFF8
92306814 4E800020
7C7F1B78 7EA802A6
4BFFFFC5 7EA803A6
60000000 00000000
C2068E9C 0000000B
48000038 3E00CC00
39E000D0 39C00005
91F06814 89630000
556BC00E 91706824
91D06820 82306820
72310001 4082FFF8
92306814 4E800020
7C741B78 38600000
887F0004 4BFFFFC1
7E83A378 38800008
60000000 00000000
